<?xml version="1.0" encoding="UTF-8"?>
<Module>
<ModulePrefs title="Wave Emaily Gadget" height="10">
  <Require feature="wave" />
  <Require feature="dynamic-height"/>
  <Require feature="locked-domain"/>
</ModulePrefs>
<Content type="html" preferred_height="10"><![CDATA[
<form action="#" onSubmit="return false;" style="margin-bottom: 0">
<table>
  <tr>
    <td>
      <input type="text" name="email" value="" id="email_input" length="30">
      <input type="submit" value="Add" id="submit" onClick="addClicked()">
    </td>
    <td>
      <input type="checkbox" name="automatic_send" id="automatic_send" value="1" onChange="return changeCheckbox();">
      <label for="automatic_send">Automatic send</label>
    </td>
  </tr>
</table>
</form>

<script>

// The gadget state contains keys prefixed with "email:". These are email addresses which are
// added by the gadget. At some point, the robot should remove these keys, but this functionality
// is not working right now, so all added keys are currently preserved. 
var EMAIL_KEY_PREFIX = "email:";

// Send mode. Can be:
// - Manual:    The user has to submit each blip for sending.
// - Automatic: After a given time, the blip is automatically sent.
//              When not set, this is the default.
// The constants must match WaveletData.SendMode enum.
var SEND_MODE = "send_mode";
var MANUAL_SEND = "MANUAL";
var AUTOMATIC_SEND = "AUTOMATIC"; 

var submitObj = document.getElementById('submit');
var inputObj = document.getElementById('email_input');
var automaticSendObj = document.getElementById('automatic_send');

function changeCheckbox() {
  wave.getState().submitValue(SEND_MODE, automaticSendObj.checked ? AUTOMATIC_SEND : MANUAL_SEND);
}

function addClicked() {
  wave.getState().submitValue(EMAIL_KEY_PREFIX + inputObj.value, "1");
  inputObj.value = "";
  return false;
}

function stateUpdated() {
  var state = wave.getState();
  if (!state) return;  // Sometimes this function is called too early.
  automaticSendObj.checked = state.get(SEND_MODE) == MANUAL_SEND ? 0 : 1;
  gadgets.window.adjustHeight();
  return;
  // TODO(dlux): The following code does not work, due to Java API bug: it does not allow removing
  // gadget state keys from a robot. Once it is working, we can use this code.
  var addInProgress = false;
  var keys = state.getKeys();
  var adding = "";  
  for (var i = 0; i < keys.length; ++i) {
    if (keys[i].indexOf(EMAIL_KEY_PREFIX) == 0) {
      adding += " " + keys[i].substring(EMAIL_KEY_PREFIX.length);
    }
  }
  
  if (adding.length > 0) {
    submitObj.value = "Adding" + adding;
    inputObj.disabled = true;
    submitObj.disabled = true;
  } else {
    submitObj.value = "Add";
    inputObj.disabled = false;
    submitObj.disabled = false;
  }
}

function init() {
  if (wave && wave.isInWaveContainer()) {
    wave.setStateCallback(stateUpdated);
  }
}

gadgets.util.registerOnLoadHandler(init);

</script>
]]></Content>
</Module>